<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 莱恩哈特的记事本</title>
    <link>https://mustang1988.github.io/post/</link>
    <description>Recent content in Posts on 莱恩哈特的记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mustang1988.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Laravel模块化开发</title>
      <link>https://mustang1988.github.io/post/laravel%E6%A8%A1%E5%9D%97%E5%8C%96%E6%8B%86%E5%88%86/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/laravel%E6%A8%A1%E5%9D%97%E5%8C%96%E6%8B%86%E5%88%86/</guid>
      <description>Laravel项目的基本目录结构 使用composer初始化一个laravel项目 #composer create-project laravel/laravel MyLaravelProject 初始化完成后观察目录结构基本如下: . ├── app │ ├──</description>
    </item>
    
    <item>
      <title>MongoDB 数据库数据迁移</title>
      <link>https://mustang1988.github.io/post/mongodb-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/mongodb-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/</guid>
      <description>导出旧数据 mongodump -h 服务器ip -d 需要导出的数据库 -o 导出文件所在目录 导出完成后会在指定目录生成对应数据库名称的目录,其中有.json 和 .bson格式</description>
    </item>
    
    <item>
      <title>使用Dockerfile构建自己的docker镜像</title>
      <link>https://mustang1988.github.io/post/%E4%BD%BF%E7%94%A8dockerfile%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84docker%E9%95%9C%E5%83%8F/</link>
      <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/%E4%BD%BF%E7%94%A8dockerfile%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84docker%E9%95%9C%E5%83%8F/</guid>
      <description>为什么要自己构建docker镜像? docker镜像是啥 Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包</description>
    </item>
    
    <item>
      <title>Thrift生成PHP接口</title>
      <link>https://mustang1988.github.io/post/thrift%E7%94%9F%E6%88%90php%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/thrift%E7%94%9F%E6%88%90php%E6%8E%A5%E5%8F%A3/</guid>
      <description>本文所使用thrift版本(0.10.0) 支持PSR4自动加载标准 $ thrift --out {OUTPUT_DIR} --gen php:psr4 {THRIFT_FILE} {OUTPUT_DIR}为php接口文件的输出目录 {THRI</description>
    </item>
    
    <item>
      <title>PHP 中的 Trait</title>
      <link>https://mustang1988.github.io/post/php-%E4%B8%AD%E7%9A%84trait/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/php-%E4%B8%AD%E7%9A%84trait/</guid>
      <description>Trait是神马 Trait是PHP5.4.0中加入的语言特性,是一种代码复用机制,为了解决类的单继承导致的一些局限性问题.可以简单理解为一种</description>
    </item>
    
    <item>
      <title>Git Commit 规范指南</title>
      <link>https://mustang1988.github.io/post/git-commit-%E8%A7%84%E8%8C%83%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mustang1988.github.io/post/git-commit-%E8%A7%84%E8%8C%83%E6%8C%87%E5%8D%97/</guid>
      <description>1. Commit message 有啥用 提供更多的历史信息，方便快速浏览 可以过滤某些commit(比如文档改动)，便于快速查找信息 可以直接从commit生成Change</description>
    </item>
    
  </channel>
</rss>